#!/bin/bash
# LINBO chroot to Filesystem
# (C) Steffen Hoenig 2014
# + added ro option 
# (C) Klaus Knopper 2013
# License: GPL V2
CHROOT_DIR="$1"

[ -d "$CHROOT_DIR" ] || { echo "Usage: $0 DIRECTORY"; exit 1; }

[ "`id -u`" = "0" ] || { echo "Must be root to run $0." >&2; exit 1; }

MOUNTED_DIRS="proc sys dev/pts"

shift

[ -n "$1" ] && [ $1 = "ro" ] && AUFS=1 && shift

trap post_chroot 1 2 3 10 15

pre_chroot(){
 echo -e "\033[1mPreparing $CHROOT_DIR...\033[0m"
 # add a aufs-layer for non-permanent changes
 if [ -n "$AUFS" ]; then
     echo -e "\033[1mAUFS enabled: Changes to chroot are not permanent.\033[0m"
     mkdir -p /tmp/.tmp-tcos-$CHROOT_DIR
     mount -t aufs -o br=/tmp/.tmp-tcos-$CHROOT_DIR=rw:$CHROOT_DIR=ro aufs $CHROOT_DIR
 fi
 # Get net
 if [ -L $CHROOT_DIR/etc/resolv.conf -o -f $CHROOT_DIR/etc/resolv.conf ] && [ ! -e $CHROOT_DIR/etc/resolv.conf.before-chroot ]; then
  mv -f $CHROOT_DIR/etc/resolv.conf $CHROOT_DIR/etc/resolv.conf.before-chroot
  cp -f /etc/resolv.conf $CHROOT_DIR/etc/resolv.conf
 fi
 for i in $MOUNTED_DIRS; do mount --bind /$i "$(realpath $CHROOT_DIR)"/"$i"; done
}

post_chroot(){
 for i in $MOUNTED_DIRS; do umount -l "$(realpath $CHROOT_DIR)/$i"; done
 # Restore old resolv.conf
 if [ -f $CHROOT_DIR/etc/resolv.conf.before-chroot -o -L $CHROOT_DIR/etc/resolv.conf.before-chroot ]; then
  mv -f $CHROOT_DIR/etc/resolv.conf.before-chroot $CHROOT_DIR/etc/resolv.conf
 fi

 # umount aufs-layer for non-permanent changes first
 [ -n "$AUFS" ] && umount $CHROOT_DIR
 rm -rf /tmp/.tmp-tcos-$CHROOT_DIR
 exit 0
}

### MAIN
pre_chroot
echo -e "\033[1mChrooting into $CHROOT_DIR...\033[0m" >&2
export MAIL=/var/mail/root HOME=/root XAUTHORITY=/root/.Xauthority debian_chroot=TCOS
chroot "$CHROOT_DIR" "$@"; RC="$?"
[ "$RC" = "0" ] || echo "Last command in chroot returned $RC"
echo -e "\033[1mLeaving $CHROOT_DIR.\033[0m" >&2
post_chroot
exit $RC
